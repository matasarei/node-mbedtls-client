name: Security and Maintenance

on:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
  push:
    paths:
      - 'package.json'

jobs:
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Use Node.js 24.x
      uses: actions/setup-node@v4
      with:
        node-version: '24.x'
    
    - name: Install dependencies
      run: npm install
    
    - name: Run security audit
      run: |
        echo "Running npm security audit..."
        npm audit --audit-level moderate
    
    - name: Check for outdated dependencies
      run: |
        echo "Checking for outdated dependencies..."
        npm outdated || echo "Outdated packages found - consider updating"
    
    - name: Validate dependency resolution
      run: |
        echo "Validating dependency resolution..."
        npm ls --depth=0 || echo "Warning: Some dependency issues found"

  dependency-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Use Node.js 24.x
      uses: actions/setup-node@v4
      with:
        node-version: '24.x'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential python3
    
    - name: Test with latest dependencies
      run: |
        echo "Testing with latest compatible dependencies..."
        
        # Create a backup of package-lock.json if it exists
        if [ -f package-lock.json ]; then
          cp package-lock.json package-lock.json.bak
        fi
        
        # Update to latest compatible versions
        npm update
        
        # Clean and reinstall to rebuild native modules with updated dependencies
        echo "Cleaning build artifacts..."
        rm -rf build/ node_modules/
        
        echo "Reinstalling and rebuilding with updated dependencies..."
        npm install
        
        echo "Running tests..."
        npm test
        npm run lint
        
        # Restore backup if it existed
        if [ -f package-lock.json.bak ]; then
          mv package-lock.json.bak package-lock.json
        fi
        
        echo "âœ“ All tests pass with updated dependencies"

  mbedtls-version-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Check mbedTLS submodule version
      run: |
        echo "Current mbedTLS version info:"
        cd mbedtls
        git log --oneline -1
        echo "Checking for newer mbedTLS releases..."
        git fetch origin
        git log --oneline -5 origin/development || echo "Could not fetch latest development branch"
        
    - name: Report mbedTLS status
      run: |
        echo "ðŸ“‹ mbedTLS Status Report:"
        echo "Current commit: $(cd mbedtls && git rev-parse --short HEAD)"
        echo "Last update: $(cd mbedtls && git log -1 --format='%ci')"
        echo "Branch: $(cd mbedtls && git branch --show-current || echo 'detached HEAD')"
